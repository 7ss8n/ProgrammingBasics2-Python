Notebook account

auth.py:
Добавлено атрибут is_admin - показує чи користувач має максимальні права - може дозволи і права адміністратора іншим.
В add_user() - перший користувач за замовчуванням отримує статус адміністратора.
В check_permission() - добавлена перевірка, чи користувач - адміністратор, бо він має всі дозволи.

auth_account.py:
Створено 4 користувачі: admin, vitaliy, bob, joe. Паролі: adminpass, vitaliypass, bobpass, joepass відповідно.
Створено 3 дозволи: rename document, write in document, read document.
Створено виняток PermissionCannotExists - на випадок якщо після запуску в меню програми буде спроба отримати доступ до якогось іншого неіснуючого дозволу.
Створено клас Notebook - головний клас програми.

При запуску програми перед появляється головне меню.
Спочатку потрібно ввести login, та увійти користувачем (бажано адміністратором).
Адміністратор має доступ до всіх 3ох дозволів, можливість надавати адмінку іншим користувачам (make admin) та надавати дозволи іншим гравцям (permit user).
Якщо адміністратор надає адмінку іншому користувачу, в нього вона не пропадає (стає на одного адміністратора більше).
Якщо, використовуючи login, ввійти під простим користувачем, він буде мати доступ тільки до тих дозволів, які раніше дозволили йому адміністратори.
Простий користувач не може надавати дозволи та адмінку.

Exceptions:
UsernameAlreadyExists - виникає при створенні юзер, якщо такий вже існує.
PasswordTooShort - виникає при створенні юзер, якщо пароль містить менше 6 символів.
InvalidUsername, InvalidPassword - виникають при вході в обліковий запис, якщо введеного юзера не існує або введено не правильний пароль.
PermissionError - виникає при створенні або перевірці дозволу, якщо такий вже існує або ще не існує відповідно.
NotLoggedInError - виникає при перевірці дозволу, якщо користувач не ввійшов в обліковий запис.
NotPermittedError - виникає при перевірці дозволу, якщо користувач не має дозволу.

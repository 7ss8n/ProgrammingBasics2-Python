Завдання 3. Реалізуйте класи Шахи, Шахівниця(Дошка для гри в шахи) та Шахова фігура, які будуть демонструвати зв'язки композиції, агрегації та успадкування. Рішення повинно задовольняти наступні варіанти шахівниць (https://uk.wikipedia.org/wiki/Шахівниця).

    Шестикутна шахівниця для гри утрьох зі стартовою позицією
    Один з варіантів шестикутних шахів Глинського
    Шахівниця для гри вчотирьох зі стартовою позицією
    Шахівниця для подвоєних шахів зі стартовою позицією

Завдання 4.
На одному з ресурсів по вивченню мови програмування Python було знайдено один з модулів програми (main.py). Після ознайомлення з цим модулем стало зрозуміло що це основний модуль гри блукачки.

Модуль складається з двох частин. Перша частина дозволяє створити ігровий простір, а друга це власне основний цикл гри.

Ігровий простір створюється шляхом створення кімнат з назвою та описом. Взаємне розміщення кімнат впорядковується за сторонами світу. В кімнатах розміщуються персонажі гри (друзі та вороги) а також предмети, які можна спробувати використати для боротьби з ворогами. Також встановлюється як буде відповідати персонаж на спробу з ним поговорити та предмет, яким можна перемогти ворога.

Після побудови ігрового поля встановлюється місцеперебування гравця в якого є пустий наплічник куди він може складати предмети для боротьби з ворогами.

Основний цикл програми виконується до тих пір поки не загине гравець, або не загинуть два вороги. В основному циклі виводиться інформація про поточну кімнату, персонажів що там знаходяться та предмети в цьому приміщенні. Гравець може вибрати один з наступних кроків: перейти в іншу кімнату, взяти предмет, почати розмову або почати боротьбу.

Якщо гравець бере предмет то він зникає з кімнати та з'являється в наплічнику гравця. Якщо гравець вибирає напрям за яким знаходиться інша кімната то ця кімната стає поточною кімнатою і гра продовжується. Якщо гравець починає розмову то на екран виводиться повідомлення від персонажа. Боротьба з ворогом починається з введення назви предмета для боротьби, якщо такий предмет є в наплічнику і це саме такий предмет яким можна перемогти то гравцю зараховується перша перемога (гра триває до двох перемог). Якщо предмет не підходить для боротьби з цим ворогом то гравцю зараховується поразка.

Розробіть модулі гри, яких бракує. В модулях повинні бути реалізовані наступні класи: Кімната, Персонаж, Ворог, Товариш, Предмет. протокол одного сеансу гри також може допомогти успішно виконати це завдання.

Завдання 5.
Розробіть аналогічну гру блукачку, але по Львову (вул. Стрийська, вул. Козельницька, вул. І.Франка, пр.Т.Шевченка, вул. Краківська ...). Сценарій можна придумати власний, або скористатися наступним. Блукаючи вулицями Львова можна зустріти студентів, кавалерів, лотрів, збуїв, батярів. На вулиці можна знайти різні предмети, якими можна когось пригостити, або захиститися. Якщо вам вдалося здійснити прогулянку від Козельницької до Краківської й повернутися назад то ви перемагаєте. В іншому випадку гра закінчується вашою поразкою.
Кавалер, а, чол.

1. Чоловік, який розважає жінку в товаристві, супроводить її під час прогулянки тощо.

2. розм. Те саме, що парубок.
Лотр, а, чол., діал., лайл. Негідник, розбійник, грабіжник.Фацет
Збуй, збуя, чол., діал. Розбійник, грабіжник.
Батяр, гульвіса, п'яничка, популярний у жінок брутальний чоловік кінця 19-початку 20 століття

Результат виконання завдання збережіть як пакунок модулів і завантажте у CMS.


Завдання 6.

а. Здійснити попередній аналіз та встановити об’єкти їх атрибути та поведінки. Розробити діаграму класів для класів Ship, Field, Game, Player з проекту "Морський бій". Діаграму класів представити у файлі довільного графічного формату з іменем see_battle_Прізвище студента.* (наприклад, see_battle_Romanyuk.jpg)

б. Реалізувати класи для проекту "Морський бій" згідно з заданою діаграмою класів та їх описом. За наступним посиланням знаходиться приклад, де реалізовано програму, яка дозволяє малювати прямокутники на полотні, різних розмірів, а також з різними границями та внутрішністю вигляд яких можна змінювати динамічно. Таке притаманно багатьом графічним редакторам, наприклад Adobe Illustrator. Зверніть увагу на те, що метод __str__ Canvas делегує зображення конкретної клітинки методу view класу Rectangle. Це дозволяє динамічно змінювати параметри прямокутника за O(1). Схожий підхід делегування ви повинні використати й в морському бої.